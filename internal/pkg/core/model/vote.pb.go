// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: model/vote.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CryptoCurrency *CriptoCurrency `protobuf:"bytes,1,opt,name=CryptoCurrency,proto3" json:"CryptoCurrency,omitempty"`
}

func (x *Vote) Reset() {
	*x = Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_model_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_model_vote_proto_rawDescGZIP(), []int{0}
}

func (x *Vote) GetCryptoCurrency() *CriptoCurrency {
	if x != nil {
		return x.CryptoCurrency
	}
	return nil
}

type CriptoCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *CriptoCurrency) Reset() {
	*x = CriptoCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriptoCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriptoCurrency) ProtoMessage() {}

func (x *CriptoCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_model_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriptoCurrency.ProtoReflect.Descriptor instead.
func (*CriptoCurrency) Descriptor() ([]byte, []int) {
	return file_model_vote_proto_rawDescGZIP(), []int{1}
}

func (x *CriptoCurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Criptos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criptos []*CriptoCurrency `protobuf:"bytes,1,rep,name=criptos,proto3" json:"criptos,omitempty"`
}

func (x *Criptos) Reset() {
	*x = Criptos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_vote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Criptos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criptos) ProtoMessage() {}

func (x *Criptos) ProtoReflect() protoreflect.Message {
	mi := &file_model_vote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criptos.ProtoReflect.Descriptor instead.
func (*Criptos) Descriptor() ([]byte, []int) {
	return file_model_vote_proto_rawDescGZIP(), []int{2}
}

func (x *Criptos) GetCriptos() []*CriptoCurrency {
	if x != nil {
		return x.Criptos
	}
	return nil
}

var File_model_vote_proto protoreflect.FileDescriptor

var file_model_vote_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x0e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0e, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x43,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x39, 0x0a, 0x07, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x07,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x07, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x73, 0x32, 0xdb, 0x02, 0x0a,
	0x0b, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x14,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x1a, 0x14,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x06, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x0a,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x0a, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x76, 0x6f,
	0x74, 0x65, 0x12, 0x0a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x1a, 0x0a,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_vote_proto_rawDescOnce sync.Once
	file_model_vote_proto_rawDescData = file_model_vote_proto_rawDesc
)

func file_model_vote_proto_rawDescGZIP() []byte {
	file_model_vote_proto_rawDescOnce.Do(func() {
		file_model_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_vote_proto_rawDescData)
	})
	return file_model_vote_proto_rawDescData
}

var file_model_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_model_vote_proto_goTypes = []interface{}{
	(*Vote)(nil),           // 0: core.Vote
	(*CriptoCurrency)(nil), // 1: core.CriptoCurrency
	(*Criptos)(nil),        // 2: core.Criptos
	(*emptypb.Empty)(nil),  // 3: google.protobuf.Empty
}
var file_model_vote_proto_depIdxs = []int32{
	1, // 0: core.Vote.CryptoCurrency:type_name -> core.CriptoCurrency
	1, // 1: core.Criptos.criptos:type_name -> core.CriptoCurrency
	3, // 2: core.VoteService.ReadCriptoCurrencies:input_type -> google.protobuf.Empty
	1, // 3: core.VoteService.AddCriptoCurrency:input_type -> core.CriptoCurrency
	1, // 4: core.VoteService.UpdateCriptoCurrency:input_type -> core.CriptoCurrency
	1, // 5: core.VoteService.RemoveCriptoCurrency:input_type -> core.CriptoCurrency
	0, // 6: core.VoteService.Upvote:input_type -> core.Vote
	0, // 7: core.VoteService.Downvote:input_type -> core.Vote
	2, // 8: core.VoteService.ReadCriptoCurrencies:output_type -> core.Criptos
	1, // 9: core.VoteService.AddCriptoCurrency:output_type -> core.CriptoCurrency
	1, // 10: core.VoteService.UpdateCriptoCurrency:output_type -> core.CriptoCurrency
	1, // 11: core.VoteService.RemoveCriptoCurrency:output_type -> core.CriptoCurrency
	0, // 12: core.VoteService.Upvote:output_type -> core.Vote
	0, // 13: core.VoteService.Downvote:output_type -> core.Vote
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_model_vote_proto_init() }
func file_model_vote_proto_init() {
	if File_model_vote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_vote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_vote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriptoCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_vote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Criptos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_model_vote_proto_goTypes,
		DependencyIndexes: file_model_vote_proto_depIdxs,
		MessageInfos:      file_model_vote_proto_msgTypes,
	}.Build()
	File_model_vote_proto = out.File
	file_model_vote_proto_rawDesc = nil
	file_model_vote_proto_goTypes = nil
	file_model_vote_proto_depIdxs = nil
}
